service: kahvilat-api

provider:
  name: aws
  runtime: nodejs12.x
  region: ${opt:region, 'eu-west-1'}
  stage: ${opt:stage, 'dev'}
  environment:
    PGHOST: ${env:POSTGRES_HOST}
    PGPORT: ${env:POSTGRES_PORT}
    PGDATABASE: ${env:POSTGRES_DB}
    PGUSER: ${env:POSTGRES_USER}
    PGPASSWORD: ${env:POSTGRES_PASSWORD}

functions:
  hello:
    handler: src/lambdas/hello.handler
    cors: true
    events:
      - http:
          path: /hello
          method: get

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

    pgSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Access to Postgres
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: '5432'
            ToPort: '5432'
            CidrIp: 0.0.0.0/0

    pgDB:
      Type: 'AWS::RDS::DBInstance'
      Properties:
        DBName: ${env:POSTGRES_DB}
        AllocatedStorage: 5
        DBInstanceClass: 'db.t2.micro'
        DBInstanceIdentifier: kahvilat-db-${self:provider.stage}
        Engine: 'postgres'
        EngineVersion: '11.5'
        MasterUsername: ${env:POSTGRES_USER}
        MasterUserPassword: ${env:POSTGRES_PASSWORD}
        VPCSecurityGroups:
          - Fn::GetAtt:
              - pgSecurityGroup
              - GroupId
      DeletionPolicy: 'Snapshot'

plugins:
  - serverless-offline
