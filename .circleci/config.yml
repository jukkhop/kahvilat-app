version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.0.0
  cypress: cypress-io/cypress@1.28.0

jobs:
  deploy-infrastructure:
    parameters:
      stage:
        type: string
    docker:
      - image: circleci/node:12.16.2
    parallelism: 1
    working_directory: ~/repo/infrastructure
    steps:
      - checkout:
          path: ~/repo
      - run:
          name: Set up terraform
          command: |
            wget https://releases.hashicorp.com/terraform/0.13.6/terraform_0.13.6_linux_amd64.zip
            unzip terraform_0.13.6_linux_amd64.zip
            sudo mv terraform /usr/local/bin/
            terraform -v
      - run:
          name: Set up git-crypt
          command: |
            sudo apt-get install -y git-crypt
            echo "$GIT_CRYPT_KEY" | base64 -d > ./git-crypt.key
            git-crypt unlock ./git-crypt.key
      - run:
          name: Run deploy script
          command: ./deploy.sh << parameters.stage >> -auto-approve

  prepare-frontend:
    parameters:
      stage:
        type: string
    docker:
      - image: circleci/node:12.16.2
    parallelism: 1
    working_directory: ~/repo/frontend
    steps:
      - checkout:
          path: ~/repo
      - attach_workspace:
          at: ~/repo/frontend
      - run:
          name: Set up git-crypt
          command: |
            sudo apt-get install -y git-crypt
            echo "$GIT_CRYPT_KEY" | base64 -d > ./git-crypt.key
            git-crypt unlock ./git-crypt.key
      - run:
          name: Run build script
          command: ./build.sh << parameters.stage >>
      - persist_to_workspace:
          root: ~/repo/frontend
          paths:
            - build

  deploy-frontend:
    parameters:
      stage:
        type: string
    docker:
      - image: circleci/golang:1.9.6
    parallelism: 1
    working_directory: ~/repo/frontend
    steps:
      - checkout:
          path: ~/repo
      - aws-cli/setup
      - attach_workspace:
          at: ~/repo/frontend
      - restore_cache:
          key: frontend-npm-cache
      - run:
          command: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            go get -u -v github.com/titanous/s3deploy
      - save_cache:
          key: frontend-npm-cache
          paths:
            - /go/pkg
      - run:
          name: Set up git-crypt
          command: |
            sudo apt-get install -y git-crypt
            echo "$GIT_CRYPT_KEY" | base64 -d > ./git-crypt.key
            git-crypt unlock ./git-crypt.key
      - run:
          name: Run deploy script
          command: ./deploy.sh << parameters.stage >>

  prepare-backend:
    docker:
      - image: circleci/node:12.16.2
    working_directory: ~/repo/backend
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            - backend-npm-cache
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: backend-npm-cache
          paths:
            - node_modules
      - run:
          name: Check code and run unit tests
          command: ./check.sh

  deploy-backend:
    parameters:
      stage:
        type: string
    docker:
      - image: circleci/node:12.16.2
    working_directory: ~/repo/backend
    steps:
      - checkout:
          path: ~/repo
      - aws-cli/setup
      - restore_cache:
          keys:
            - backend-npm-cache
      - run:
          name: Install Serverless CLI and dependencies
          command: |
            sudo yarn global add serverless
            yarn install
      - save_cache:
          key: backend-npm-cache
          paths:
            - node_modules
      - run:
          name: Copy node_modules folder to correct location
          command: |
            mkdir -p nodejs/node_modules
            cp -r node_modules/* nodejs/node_modules/
      - run:
          name: Set up git-crypt
          command: |
            sudo apt-get install -y git-crypt
            echo "$GIT_CRYPT_KEY" | base64 -d > ./git-crypt.key
            git-crypt unlock ./git-crypt.key
      - run:
          name: Run deploy script
          command: ./deploy.sh << parameters.stage >>

  run-integration-tests:
    parameters:
      stage:
        type: string
    docker:
      - image: circleci/node:12.16.2
    working_directory: ~/repo/integration-tests
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            - integration-npm-cache
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: integration-npm-cache
          paths:
            - node_modules
      - run:
          name: Set up git-crypt
          command: |
            sudo apt-get install -y git-crypt
            echo "$GIT_CRYPT_KEY" | base64 -d > ./git-crypt.key
            git-crypt unlock ./git-crypt.key
      - run:
          name: Check code
          command: ./check.sh
      - run:
          name: Run integration tests
          command: ./run.sh << parameters.stage >>

workflows:
  version: 2
  dev:
    jobs:
      - deploy-infrastructure:
          stage: dev
          filters:
            branches:
              only:
                - master
      - prepare-frontend:
          stage: dev
          filters:
            branches:
              only:
                - master
      - deploy-frontend:
          stage: dev
          requires:
            - prepare-frontend
          filters:
            branches:
              only:
                - master
      - prepare-backend:
          filters:
            branches:
              only:
                - master
      - deploy-backend:
          stage: dev
          requires:
            - prepare-backend
          filters:
            branches:
              only:
                - master
      - run-integration-tests:
          stage: dev
          requires:
            - deploy-backend
          filters:
            branches:
              only:
                - master
      - cypress/install:
          name: prepare-e2e-tests
          yarn: true
          cache-key: 'cache-{{ arch }}-{{ .Branch }}-{{ checksum "e2e-tests/yarn.lock"}}'
          working_directory: e2e-tests
      - cypress/run:
          name: run-e2e-tests
          yarn: true
          cache-key: 'cache-{{ arch }}-{{ .Branch }}-{{ checksum "e2e-tests/yarn.lock"}}'
          working_directory: e2e-tests
          no-workspace: true
          requires:
            - deploy-frontend
            - deploy-backend
            - prepare-e2e-tests
          filters:
            branches:
              only:
                - master

  prd:
    jobs:
      - deploy-infrastructure:
          stage: prd
          filters:
            branches:
              only:
                - production
      - prepare-frontend:
          stage: prd
          filters:
            branches:
              only:
                - production
      - deploy-frontend:
          stage: prd
          requires:
            - prepare-frontend
          filters:
            branches:
              only:
                - production
      - prepare-backend:
          filters:
            branches:
              only:
                - production
      - deploy-backend:
          stage: prd
          requires:
            - prepare-backend
          filters:
            branches:
              only:
                - production
