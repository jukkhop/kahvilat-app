version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.0.0
  compare-url: iynere/compare-url@1.2.0

jobs:
  build-frontend:
    parameters:
      stage:
        type: string
    docker:
      - image: circleci/node:12.16.2
    parallelism: 1
    working_directory: ~/repo/frontend
    steps:
      - checkout:
          path: ~/repo
      - compare-url/reconstruct
      - compare-url/use:
          custom-logic: |
            if [[ $(git diff $COMMIT_RANGE --name-status | grep "frontend") == "" ]]; then
              echo "No changes to frontend code, skipping job."
              circleci step halt
            fi
      - attach_workspace:
          at: ~/repo/frontend
      - run:
          name: Set up git-crypt
          command: |
            sudo apt-get install -y git-crypt
            echo "$GIT_CRYPT_KEY" | base64 -d > ./git-crypt.key
            git-crypt unlock ./git-crypt.key
      - run:
          name: Run build script
          command: ./build.sh << parameters.stage >>
      - persist_to_workspace:
          root: ~/repo/frontend
          paths:
            - build

  deploy-frontend:
    parameters:
      stage:
        type: string
    docker:
      - image: circleci/golang:1.9.6
    parallelism: 1
    working_directory: ~/repo/frontend
    steps:
      - checkout:
          path: ~/repo
      - compare-url/reconstruct
      - compare-url/use:
          custom-logic: |
            if [[ $(git diff $COMMIT_RANGE --name-status | grep "frontend") == "" ]]; then
              echo "No changes to frontend code, skipping job."
              circleci step halt
            fi
      - attach_workspace:
          at: ~/repo/frontend
      - restore_cache:
          key: v1-pkg-cache
      - run:
          command: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            go get -u -v github.com/titanous/s3deploy
      - save_cache:
          key: v1-pkg-cache
          paths:
            - /go/pkg
      - run:
          name: Set up git-crypt
          command: |
            sudo apt-get install -y git-crypt
            echo "$GIT_CRYPT_KEY" | base64 -d > ./git-crypt.key
            git-crypt unlock ./git-crypt.key
      - run:
          name: Run deploy script
          command: ./deploy.sh << parameters.stage >>

  build-and-deploy-backend:
    parameters:
      stage:
        type: string
    docker:
      - image: circleci/node:12.16.2
    working_directory: ~/repo/backend
    steps:
      - checkout:
          path: ~/repo
      - compare-url/reconstruct
      - compare-url/use:
          custom-logic: |
            if [[ $(git diff $COMMIT_RANGE --name-status | grep "backend") == "" ]]; then
              echo "No changes to backend code, skipping job."
              circleci step halt
            fi
      - aws-cli/setup
      - restore_cache:
          keys:
            - v1-deps-cache
      - run:
          name: Install Serverless CLI and dependencies
          command: |
            sudo yarn global add serverless
            yarn install
      - save_cache:
          key: v1-deps-cache
          paths:
            - node_modules
      - run:
          name: Copy node_modules folder to correct location
          command: |
            mkdir -p nodejs/node_modules
            cp -r node_modules/* nodejs/node_modules/
      - run:
          name: Set up git-crypt
          command: |
            sudo apt-get install -y git-crypt
            echo "$GIT_CRYPT_KEY" | base64 -d > ./git-crypt.key
            git-crypt unlock ./git-crypt.key
      - run:
          name: Run deploy script
          command: ./deploy.sh << parameters.stage >>

workflows:
  version: 2
  build-and-deploy-frontend-dev:
    jobs:
      - build-frontend:
          stage: dev
          filters:
            branches:
              only:
                - master
      - deploy-frontend:
          stage: dev
          requires:
            - build-frontend
          filters:
            branches:
              only:
                - master

  build-and-deploy-frontend-prd:
    jobs:
      - build-frontend:
          stage: prd
          filters:
            branches:
              only:
                - production
      - deploy-frontend:
          stage: prd
          requires:
            - build-frontend
          filters:
            branches:
              only:
                - production

  build-and-deploy-backend-dev:
    jobs:
      - build-and-deploy-backend:
          stage: dev
          filters:
            branches:
              only:
                - master

  build-and-deploy-backend-prd:
    jobs:
      - build-and-deploy-backend:
          stage: prd
          filters:
            branches:
              only:
                - production
