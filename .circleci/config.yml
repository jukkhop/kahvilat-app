version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.0.0
  cypress: cypress-io/cypress@1.28.0

jobs:
  deploy-infrastructure:
    parameters:
      stage:
        type: string
    docker:
      - image: cimg/node:16.19.0
    parallelism: 1
    working_directory: ~/repo/kahvilat-infra
    steps:
      - checkout:
          path: ~/repo
      - run:
          name: Set up terraform
          command: |
            wget https://releases.hashicorp.com/terraform/0.13.6/terraform_0.13.6_linux_amd64.zip
            unzip terraform_0.13.6_linux_amd64.zip
            sudo mv terraform /usr/local/bin/
            terraform -v
      - run:
          name: Set up git-crypt
          command: |
            sudo apt-get update
            sudo apt-get install -y git-crypt
            echo "$GIT_CRYPT_KEY" | base64 -d > ./git-crypt.key
            git-crypt unlock ./git-crypt.key
      - run:
          name: Run deploy script
          command: ./deploy.sh << parameters.stage >> -auto-approve

  prepare-ui:
    parameters:
      stage:
        type: string
    docker:
      - image: cimg/node:16.19.0
    parallelism: 1
    working_directory: ~/repo/kahvilat-ui
    steps:
      - checkout:
          path: ~/repo
      - attach_workspace:
          at: ~/repo/kahvilat-ui
      - run:
          name: Set up git-crypt
          command: |
            sudo apt-get update
            sudo apt-get install -y git-crypt
            echo "$GIT_CRYPT_KEY" | base64 -d > ./git-crypt.key
            git-crypt unlock ./git-crypt.key
      - run:
          name: Run build script
          command: ./build.sh << parameters.stage >>
      - persist_to_workspace:
          root: ~/repo/kahvilat-ui
          paths:
            - build

  deploy-ui:
    parameters:
      stage:
        type: string
    docker:
      - image: cimg/node:16.19.0
    parallelism: 1
    working_directory: ~/repo/kahvilat-ui
    steps:
      - checkout:
          path: ~/repo
      - aws-cli/setup
      - attach_workspace:
          at: ~/repo/kahvilat-ui
      - run:
          name: Set up git-crypt
          command: |
            sudo apt-get update
            sudo apt-get install -y git-crypt
            echo "$GIT_CRYPT_KEY" | base64 -d > ./git-crypt.key
            git-crypt unlock ./git-crypt.key
      - run:
          name: Run deploy script
          command: ./deploy.sh << parameters.stage >>

  prepare-api:
    docker:
      - image: cimg/node:16.19.0
    working_directory: ~/repo/kahvilat-api
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            - api-npm-cache
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: api-npm-cache
          paths:
            - node_modules
      - run:
          name: Check code and run unit tests
          command: ./check.sh

  deploy-api:
    parameters:
      stage:
        type: string
    docker:
      - image: cimg/node:16.19.0
    working_directory: ~/repo/kahvilat-api
    steps:
      - checkout:
          path: ~/repo
      - aws-cli/setup
      - restore_cache:
          keys:
            - api-npm-cache
      - run:
          name: Install Serverless CLI and dependencies
          command: |
            npm install -g serverless
            npm install
      - save_cache:
          key: api-npm-cache
          paths:
            - node_modules
      - run:
          name: Copy node_modules folder to correct location
          command: |
            mkdir -p nodejs/node_modules
            cp -r node_modules/* nodejs/node_modules/
      - run:
          name: Set up git-crypt
          command: |
            sudo apt-get update
            sudo apt-get install -y git-crypt
            echo "$GIT_CRYPT_KEY" | base64 -d > ./git-crypt.key
            git-crypt unlock ./git-crypt.key
      - run:
          name: Run deploy script
          command: ./deploy.sh << parameters.stage >>

  run-api-tests:
    parameters:
      stage:
        type: string
    docker:
      - image: cimg/node:16.19.0
    working_directory: ~/repo/kahvilat-api-tests
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
            - api-tests-npm-cache
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: api-tests-npm-cache
          paths:
            - node_modules
      - run:
          name: Set up git-crypt
          command: |
            sudo apt-get update
            sudo apt-get install -y git-crypt
            echo "$GIT_CRYPT_KEY" | base64 -d > ./git-crypt.key
            git-crypt unlock ./git-crypt.key
      - run:
          name: Check code
          command: ./check.sh
      - run:
          name: Run API tests
          command: ./run.sh << parameters.stage >>

workflows:
  version: 2
  dev:
    jobs:
      - deploy-infrastructure:
          stage: dev
          filters:
            branches:
              only:
                - master
      - prepare-ui:
          stage: dev
          filters:
            branches:
              only:
                - master
      - deploy-ui:
          stage: dev
          requires:
            - prepare-ui
          filters:
            branches:
              only:
                - master
      - prepare-api:
          filters:
            branches:
              only:
                - master
      - deploy-api:
          stage: dev
          requires:
            - prepare-api
          filters:
            branches:
              only:
                - master
      - run-api-tests:
          stage: dev
          requires:
            - deploy-api
          filters:
            branches:
              only:
                - master
      - cypress/install:
          name: prepare-ui-tests
          cache-key: 'ui-tests-cache-{{ checksum "kahvilat-ui-tests/package-lock.json"}}'
          working_directory: kahvilat-ui-tests
          filters:
            branches:
              only:
                - master
      - cypress/run:
          name: run-ui-tests
          cache-key: 'ui-tests-cache-{{ checksum "kahvilat-ui-tests/package-lock.json"}}'
          working_directory: kahvilat-ui-tests
          no-workspace: true
          requires:
            - deploy-ui
            - deploy-api
            - prepare-ui-tests
          filters:
            branches:
              only:
                - master

  prod:
    jobs:
      - deploy-infrastructure:
          stage: prod
          filters:
            branches:
              only:
                - production
      - prepare-ui:
          stage: prod
          filters:
            branches:
              only:
                - production
      - deploy-ui:
          stage: prod
          requires:
            - prepare-ui
          filters:
            branches:
              only:
                - production
      - prepare-api:
          filters:
            branches:
              only:
                - production
      - deploy-api:
          stage: prod
          requires:
            - prepare-api
          filters:
            branches:
              only:
                - production
